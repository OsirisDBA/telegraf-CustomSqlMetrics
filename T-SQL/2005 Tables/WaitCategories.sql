/* Create influx schema */
IF NOT EXISTS ( SELECT schema_name
                FROM information_schema.schemata
                WHERE   schema_name = 'influx' 
              ) 
BEGIN
    EXEC sp_executesql N'CREATE SCHEMA influx'
END

CREATE TABLE influx.WaitCategories
(
    wait_type     NVARCHAR(60)  NOT NULL
  , wait_category NVARCHAR(128) NOT NULL
  , CONSTRAINT PK_WaitCategories
        PRIMARY KEY CLUSTERED ( wait_type ASC )
        WITH ( IGNORE_DUP_KEY = ON )
);
GO

INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('ASYNC_IO_COMPLETION','Other Disk IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('ASYNC_NETWORK_IO','Network IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BACKUPIO','Other Disk IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_CONNECTION_RECEIVE_TASK','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_DISPATCHER','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_ENDPOINT_STATE_MUTEX','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_EVENTHANDLER','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_FORWARDER','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_INIT','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_MASTERSTART','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_RECEIVE_WAITFOR','User Wait');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_REGISTERALLENDPOINTS','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_SERVICE','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_SHUTDOWN','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_START','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TASK_SHUTDOWN','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TASK_STOP','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TASK_SUBMIT','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TO_FLUSH','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TRANSMISSION_OBJECT','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TRANSMISSION_TABLE','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TRANSMISSION_WORK','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('BROKER_TRANSMITTER','Service Broker');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CHECKPOINT_QUEUE','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CHKPT','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_AUTO_EVENT','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_CRST','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_JOIN','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_MANUAL_EVENT','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_MEMORY_SPY','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_MONITOR','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_RWLOCK_READER','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_RWLOCK_WRITER','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_SEMAPHORE','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLR_TASK_START','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CLRHOST_STATE_ACCESS','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CMEMPARTITIONED','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CMEMTHREAD','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CXPACKET','Parallelism');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('CXCONSUMER','Parallelism');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DBMIRROR_DBM_EVENT','Mirroring');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DBMIRROR_DBM_MUTEX','Mirroring');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DBMIRROR_EVENTS_QUEUE','Mirroring');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DBMIRROR_SEND','Mirroring');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DBMIRROR_WORKER_QUEUE','Mirroring');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DBMIRRORING_CMD','Mirroring');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTC','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTC_ABORT_REQUEST','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTC_RESOLVE','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTC_STATE','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTC_TMDOWN_REQUEST','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTC_WAITFOR_OUTCOME','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTCNEW_ENLIST','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTCNEW_PREPARE','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTCNEW_RECOVERY','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTCNEW_TM','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTCNEW_TRANSACTION_ENLISTMENT','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('DTCPNTSYNC','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('EE_PMOLOCK','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('EXCHANGE','Parallelism');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('EXTERNAL_SCRIPT_NETWORK_IOF','Network IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FCB_REPLICA_READ','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FCB_REPLICA_WRITE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_COMPROWSET_RWLOCK','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_IFTS_RWLOCK','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_IFTS_SCHEDULER_IDLE_WAIT','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_IFTSHC_MUTEX','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_IFTSISM_MUTEX','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_MASTER_MERGE','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_MASTER_MERGE_COORDINATOR','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_METADATA_MUTEX','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_PROPERTYLIST_CACHE','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FT_RESTART_CRAWL','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('FULLTEXT GATHERER','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_AG_MUTEX','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_AR_CRITICAL_SECTION_ENTRY','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_AR_MANAGER_MUTEX','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_AR_UNLOAD_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_ARCONTROLLER_NOTIFICATIONS_SUBSCRIBER_LIST','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_BACKUP_BULK_LOCK','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_BACKUP_QUEUE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_CLUSAPI_CALL','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_COMPRESSED_CACHE_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_CONNECTIVITY_INFO','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DATABASE_FLOW_CONTROL','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DATABASE_VERSIONING_STATE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DATABASE_WAIT_FOR_RECOVERY','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DATABASE_WAIT_FOR_RESTART','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DATABASE_WAIT_FOR_TRANSITION_TO_VERSIONING','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DB_COMMAND','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DB_OP_COMPLETION_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DB_OP_START_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DBR_SUBSCRIBER','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DBR_SUBSCRIBER_FILTER_LIST','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DBSEEDING','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DBSEEDING_LIST','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_DBSTATECHANGE_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FABRIC_CALLBACK','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_BLOCK_FLUSH','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_FILE_CLOSE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_FILE_REQUEST','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_IOMGR','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_IOMGR_IOCOMPLETION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_MANAGER','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_FILESTREAM_PREPROC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_GROUP_COMMIT','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_LOGCAPTURE_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_LOGCAPTURE_WAIT','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_LOGPROGRESS_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_NOTIFICATION_DEQUEUE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_NOTIFICATION_WORKER_EXCLUSIVE_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_NOTIFICATION_WORKER_STARTUP_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_NOTIFICATION_WORKER_TERMINATION_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_PARTNER_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_READ_ALL_NETWORKS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_RECOVERY_WAIT_FOR_CONNECTION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_RECOVERY_WAIT_FOR_UNDO','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_REPLICAINFO_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SEEDING_CANCELLATION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SEEDING_FILE_LIST','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SEEDING_LIMIT_BACKUPS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SEEDING_SYNC_COMPLETION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SEEDING_TIMEOUT_TASK','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SEEDING_WAIT_FOR_COMPLETION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SYNC_COMMIT','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_SYNCHRONIZING_THROTTLE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_TDS_LISTENER_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_TDS_LISTENER_SYNC_PROCESSING','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_THROTTLE_LOG_RATE_GOVERNOR','Log Rate Governor');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_TIMER_TASK','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_TRANSPORT_DBRLIST','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_TRANSPORT_FLOW_CONTROL','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_TRANSPORT_SESSION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_WORK_POOL','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_WORK_QUEUE','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('HADR_XRF_STACK_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('INSTANCE_LOG_RATE_GOVERNOR','Log Rate Governor');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('IO_COMPLETION','Other Disk IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('IO_QUEUE_LIMIT','Other Disk IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('IO_RETRY','Other Disk IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LATCH_DT','Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LATCH_EX','Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LATCH_KP','Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LATCH_NL','Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LATCH_SH','Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LATCH_UP','Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LAZYWRITER_SLEEP','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_BU','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_BU_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_BU_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IS_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IS_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IU','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IU_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IU_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IX','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IX_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_IX_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_NL','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_NL_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_NL_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_S','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_S_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_S_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_U','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_U_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_U_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_X','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_X_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RIn_X_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RS_S','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RS_S_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RS_S_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RS_U','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RS_U_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RS_U_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_S','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_S_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_S_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_U','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_U_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_U_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_X','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_X_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_RX_X_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_S','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_S_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_S_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SCH_M','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SCH_M_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SCH_M_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SCH_S','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SCH_S_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SCH_S_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SIU','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SIU_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SIU_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SIX','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SIX_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_SIX_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_U','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_U_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_U_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_UIX','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_UIX_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_UIX_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_X','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_X_ABORT_BLOCKERS','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LCK_M_X_LOW_PRIORITY','Lock');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LOGBUFFER','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LOGMGR','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LOGMGR_FLUSH','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LOGMGR_PMM_LOG','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LOGMGR_QUEUE','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('LOGMGR_RESERVE_APPEND','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('MEMORY_ALLOCATION_EXT','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('MEMORY_GRANT_UPDATE','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('MSQL_XACT_MGR_MUTEX','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('MSQL_XACT_MUTEX','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('MSSEARCH','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('NET_WAITFOR_PACKET','Network IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('ONDEMAND_TASK_QUEUE','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGEIOLATCH_DT','Buffer IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGEIOLATCH_EX','Buffer IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGEIOLATCH_KP','Buffer IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGEIOLATCH_NL','Buffer IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGEIOLATCH_SH','Buffer IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGEIOLATCH_UP','Buffer IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGELATCH_DT','Buffer Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGELATCH_EX','Buffer Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGELATCH_KP','Buffer Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGELATCH_NL','Buffer Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGELATCH_SH','Buffer Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PAGELATCH_UP','Buffer Latch');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('POOL_LOG_RATE_GOVERNOR','Log Rate Governor');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_ABR','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_CLOSEBACKUPMEDIA','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_CLOSEBACKUPTAPE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_CLOSEBACKUPVDIDEVICE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_CLUSAPI_CLUSTERRESOURCECONTROL','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_COCREATEINSTANCE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_COGETCLASSOBJECT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_CREATEACCESSOR','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_DELETEROWS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_GETCOMMANDTEXT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_GETDATA','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_GETNEXTROWS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_GETRESULT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_GETROWSBYBOOKMARK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBFLUSH','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBLOCKREGION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBREADAT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBSETSIZE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBSTAT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBUNLOCKREGION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_LBWRITEAT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_QUERYINTERFACE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_RELEASE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_RELEASEACCESSOR','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_RELEASEROWS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_RELEASESESSION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_RESTARTPOSITION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_SEQSTRMREAD','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_SEQSTRMREADANDWRITE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_SETDATAFAILURE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_SETPARAMETERINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_SETPARAMETERPROPERTIES','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_STRMLOCKREGION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_STRMSEEKANDREAD','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_STRMSEEKANDWRITE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_STRMSETSIZE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_STRMSTAT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_COM_STRMUNLOCKREGION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_CONSOLEWRITE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_CREATEPARAM','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DEBUG','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSADDLINK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSLINKEXISTCHECK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSLINKHEALTHCHECK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSREMOVELINK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSREMOVEROOT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSROOTFOLDERCHECK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSROOTINIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DFSROOTSHARECHECK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DTC_ABORT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DTC_ABORTREQUESTDONE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DTC_BEGINTRANSACTION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DTC_COMMITREQUESTDONE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DTC_ENLIST','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_DTC_PREPAREREQUESTDONE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_FILESIZEGET','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_FSAOLEDB_ABORTTRANSACTION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_FSAOLEDB_COMMITTRANSACTION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_FSAOLEDB_STARTTRANSACTION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_FSRECOVER_UNCONDITIONALUNDO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_GETRMINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_HADR_LEASE_MECHANISM','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_HTTP_EVENT_WAIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_HTTP_REQUEST','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_LOCKMONITOR','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_MSS_RELEASE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_ODBCOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLE_UNINIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_ABORTORCOMMITTRAN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_ABORTTRAN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_GETDATASOURCE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_GETLITERALINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_GETPROPERTIES','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_GETPROPERTYINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_GETSCHEMALOCK','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_JOINTRANSACTION','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_RELEASE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDB_SETPROPERTIES','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OLEDBOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_AUTHENTICATIONOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_AUTHORIZATIONOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_AUTHZGETINFORMATIONFROMCONTEXT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_AUTHZINITIALIZECONTEXTFROMSID','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_AUTHZINITIALIZERESOURCEMANAGER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_BACKUPREAD','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CLOSEHANDLE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CLUSTEROPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_COMOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_COMPLETEAUTHTOKEN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_COPYFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CREATEDIRECTORY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CREATEFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CRYPTACQUIRECONTEXT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CRYPTIMPORTKEY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_CRYPTOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DECRYPTMESSAGE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DELETEFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DELETESECURITYCONTEXT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DEVICEIOCONTROL','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DEVICEOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DIRSVC_NETWORKOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DISCONNECTNAMEDPIPE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DOMAINSERVICESOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DSGETDCNAME','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_DTCOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_ENCRYPTMESSAGE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_FILEOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_FINDFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_FLUSHFILEBUFFERS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_FORMATMESSAGE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_FREECREDENTIALSHANDLE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_FREELIBRARY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GENERICOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETADDRINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETDISKFREESPACE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETFILEATTRIBUTES','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETFILESIZE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETFINALFILEPATHBYHANDLE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETLONGPATHNAME','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETPROCADDRESS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETVOLUMENAMEFORVOLUMEMOUNTPOINT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_GETVOLUMEPATHNAME','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_LIBRARYOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_LOADLIBRARY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_LOGONUSER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_LOOKUPACCOUNTSID','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_MESSAGEQUEUEOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_MOVEFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETGROUPGETUSERS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETLOCALGROUPGETMEMBERS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETUSERGETGROUPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETUSERGETLOCALGROUPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETUSERMODALSGET','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETVALIDATEPASSWORDPOLICY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_NETVALIDATEPASSWORDPOLICYFREE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_OPENDIRECTORY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_PDH_WMI_INIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_PIPEOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_PROCESSOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_QUERYCONTEXTATTRIBUTES','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_QUERYREGISTRY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_QUERYSECURITYCONTEXTTOKEN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_REMOVEDIRECTORY','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_REPORTEVENT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_REVERTTOSELF','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_RSFXDEVICEOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SECURITYOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SERVICEOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SETENDOFFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SETFILEPOINTER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SETFILEVALIDDATA','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SETNAMEDSECURITYINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SQLCLROPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_SQMLAUNCH','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_VERIFYSIGNATURE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_VERIFYTRUST','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_VSSOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_WAITFORSINGLEOBJECT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_WINSOCKOPS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_WRITEFILE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_WRITEFILEGATHER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_OS_WSASETLASTERROR','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_REENLIST','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_RESIZELOG','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_ROLLFORWARDREDO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_ROLLFORWARDUNDO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SB_STOPENDPOINT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SERVER_STARTUP','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SETRMINFO','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SHAREDMEM_GETDATA','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SNIOPEN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SOSHOST','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SOSTESTING','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_SP_SERVER_DIAGNOSTICS','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_STARTRM','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_STREAMFCB_CHECKPOINT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_STREAMFCB_RECOVER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_STRESSDRIVER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_TESTING','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_TRANSIMPORT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_UNMARSHALPROPAGATIONTOKEN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_VSS_CREATESNAPSHOT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_VSS_CREATEVOLUMESNAPSHOT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_CALLBACKEXECUTE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_CX_FILE_OPEN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_CX_HTTP_CALL','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_DISPATCHER','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_ENGINEINIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_GETTARGETSTATE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_SESSIONCOMMIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_TARGETFINALIZE','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_TARGETINIT','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XE_TIMERRUN','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PREEMPTIVE_XETESTING','Preemptive');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_ACTION_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_CHANGE_NOTIFIER_TERMINATION_SYNC','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_CLUSTER_INTEGRATION','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_FAILOVER_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_JOIN','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_OFFLINE_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_ONLINE_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_POST_ONLINE_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_SERVER_READY_CONNECTIONS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADR_WORKITEM_COMPLETED','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_HADRSIM','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('PWAIT_RESOURCE_SEMAPHORE_FT_PARALLEL_QUERY_SYNC','Full Text Search');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('QUERY_TRACEOUT','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPL_CACHE_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPL_HISTORYCACHE_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPL_SCHEMA_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPL_TRANFSINFO_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPL_TRANHASHTABLE_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPL_TRANTEXTINFO_ACCESS','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REPLICA_WRITES','Replication');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('REQUEST_FOR_DEADLOCK_SEARCH','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('RESERVED_MEMORY_ALLOCATION_EXT','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('RESOURCE_SEMAPHORE','Memory');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('RESOURCE_SEMAPHORE_QUERY_COMPILE','Compilation');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_BPOOL_FLUSH','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_BUFFERPOOL_HELPLW','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_DBSTARTUP','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_DCOMSTARTUP','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_MASTERDBREADY','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_MASTERMDREADY','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_MASTERUPGRADED','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_MEMORYPOOL_ALLOCATEPAGES','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_MSDBSTARTUP','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_RETRY_VIRTUALALLOC','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_SYSTEMTASK','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_TASK','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_TEMPDBSTARTUP','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SLEEP_WORKSPACE_ALLOCATEPAGE','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SOS_SCHEDULER_YIELD','CPU');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLCLR_APPDOMAIN','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLCLR_ASSEMBLY','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLCLR_DEADLOCK_DETECTION','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLCLR_QUANTUM_PUNISHMENT','SQL CLR');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_BUFFER_FLUSH','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_FILE_BUFFER','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_FILE_READ_IO_COMPLETION','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_FILE_WRITE_IO_COMPLETION','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_INCREMENTAL_FLUSH_SLEEP','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_PENDING_BUFFER_WRITERS','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_SHUTDOWN','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('SQLTRACE_WAIT_ENTRIES','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('THREADPOOL','Worker Thread');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRACE_EVTNOTIF','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRACEWRITE','Tracing');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRAN_MARKLATCH_DT','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRAN_MARKLATCH_EX','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRAN_MARKLATCH_KP','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRAN_MARKLATCH_NL','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRAN_MARKLATCH_SH','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRAN_MARKLATCH_UP','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('TRANSACTION_MUTEX','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('WAIT_FOR_RESULTS','User Wait');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('WAITFOR','User Wait');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('WRITE_COMPLETION','Other Disk IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('WRITELOG','Tran Log IO');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('XACT_OWN_TRANSACTION','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('XACT_RECLAIM_SESSION','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('XACTLOCKINFO','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('XACTWORKSPACE_MUTEX','Transaction');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('XE_DISPATCHER_WAIT','Idle');
INSERT INTO influx.WaitCategories( wait_type, wait_category) VALUES ('XE_TIMER_EVENT','Idle');
GO